local Players = game:GetService("Players")
local speaker = Players.LocalPlayer
local plr = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer
local roles
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/thaibao/main/TbaoHubEz"))()
library.rank = "developer"
local Wm = library:Watermark("Ping: " .. math.round(plr:GetNetworkPing() * 1000) .. "")
local FpsWm = Wm:AddWatermark("fps: " .. library.fps)
coroutine.wrap(function()
    while task.wait(0.35) do
    
        task.spawn(function()
            pcall(function()
                FpsWm:Text("fps: " .. library.fps)
            end)
        end)
        
        task.spawn(function()
            pcall(function()
                Wm:Text("Ping: " .. math.round(plr:GetNetworkPing() * 1000))
            end)
        end)
        
    end
end)()
library:Introduction()
task.wait()

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
MakeWindow({
  Hub = {
    Title = "Murder Mystery 2",
    Animation = "by Liver zMods"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "",
    KeyLink = "",
    Keys = {"1234"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

local function randomString()
    local length = math.random(17,45)
    local array = {}
    for i = 1, length do
        array[i] = string.char(math.random(32, 126))
    end
    return table.concat(array)
end

task.spawn(function()
    coroutine.wrap(function()
        ReplicatedStorage = game:GetService("ReplicatedStorage")
        Players = game:GetService("Players")
        RunService = game:GetService("RunService")
        LP = Players.LocalPlayer
        list = nil
        
        function IsDeath(Player)
        	for i, v in pairs(list) do
        		if Player.Name == i then
        			if v.Killed and v.Dead then
        				return true
        			elseif not v.Killed and not v.Dead then
        				return false
        			end
        		end
        	end
        end
         
        -- > Loops < --
         
        while true do
        	list = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
        	for i, v in pairs(list) do
        		if v.Role == "Murderer" then
        			M = i
        		elseif v.Role == 'Sheriff' then
        			S = i
        		elseif v.Role == 'Hero' then
        			H = i
        		end
        	end
        	
        	task.wait(.45)
        end
    end)()
end)

function SearchAndNotify(player)
    local Players = game:GetService("Players")
    local StarterGui = game:GetService("StarterGui")

    local function NotifyRole(playerName, role)
        if not IsDeath(Players[playerName]) then
            local player = Players:FindFirstChild(playerName)
            if player then
                local userId = player.UserId
                local displayName = player.DisplayName
                local image, isReady = Players:GetUserThumbnailAsync(userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
                
                local textToShow = (displayName == playerName) and playerName or (displayName .. "\n" .. playerName)

                StarterGui:SetCore("SendNotification", {
                    Title = role;
                    Text = textToShow;
                    Icon = image;
                    Duration = 8;
                })
            end
        end
    end

    local knife = (player.Backpack:FindFirstChild("Knife") or player.Character:FindFirstChild("Knife"))
    local gun = (player.Backpack:FindFirstChild("Gun") or player.Character:FindFirstChild("Gun"))

    if player.Name == M or knife then
        NotifyRole(M, "Murderer")
    elseif player.Name == S then
        NotifyRole(S, "Sheriff")
    elseif player.Name == H then
        if IsDeath(game.Players[S]) then
            NotifyRole(H, "Hero")
        end
    end
end

function CheckDistanceMurder(targetDistance)
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Murder = game.Players[M]
    
    if Murder and not Murder.Character then
        return false
    end
    
    local targetCharacter = Murder and Murder.Character or nil
    
    local murderHasKnife = targetCharacter and (targetCharacter:FindFirstChild("Knife") or targetCharacter:FindFirstChild("Backpack") and targetCharacter.Backpack:FindFirstChild("Knife"))
    
    if murderHasKnife then
        local distance = (LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position - targetCharacter.HumanoidRootPart.Position).Magnitude
        return distance == targetDistance
    else
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local character = player.Character
                if character and character:FindFirstChild("Knife") or player.Backpack:FindFirstChild("Knife") then
                    local distance = (LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position - character.HumanoidRootPart.Position).Magnitude
                    return distance == targetDistance
                end
            end
        end
    end
    
    return false
end

task.spawn(function()
    coroutine.wrap(function()
        gui = Instance.new("ScreenGui")
        gui.Name = randomString()
        gui.Parent = game.Players.LocalPlayer.PlayerGui
        gui.DisplayOrder = 9e9
        gui.Enabled = true
        coroutine.wrap(function()
            while task.wait() do
                gui.RobloxLocked = true
                gui.ResetOnSpawn = false
            end
        end)()
    
        local imageButton = Instance.new("ImageButton")
        imageButton.Name = randomString()
        imageButton.Size = UDim2.new(0.0325, 0, 0.076, 0)
        imageButton.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
        imageButton.BackgroundTransparency = 0.350101838
        imageButton.Image = "rbxassetid://16529618831"
        imageButton.Position = UDim2.new(0.20, 0, 0, 0)
        imageButton.Draggable = true
        local imageButtonBorder = Instance.new("UIStroke", imageButton)
        imageButtonBorder.Color = Color3.fromRGB(255, 0, 0)
        imageButtonBorder.Thickness = 1.6
        imageButton.Parent = gui
        
        imageButton.MouseButton1Click:Connect(function()
            task.spawn(function()
                local Sound = Instance.new("Sound", game:GetService("SoundService"))
                Sound.SoundId = "rbxassetid://4601634016"
                Sound:Play()
                for i = 1, 5 do
                    task.wait()
                end 
                
                for _, v in pairs(game.Players:GetPlayers()) do
                    SearchAndNotify(v)
                end
            end)
        end)
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0.2, 0.1)
        corner.Parent = imageButton
    end)()
end)

--// function //

--<>---<>---<>---<>---<>--

local function savePos()
    return game:GetService("Players").LocalPlayer.Character:GetPrimaryPartCFrame()
end

--<>---<>---<>---<>---<>--

local function TpPos(save)
    game:GetService("Players").LocalPlayer.Character:SetPrimaryPartCFrame(save)
end

--<>---<>---<>---<>---<>--

coroutine.wrap(function()
    local ESPEnabled = false
    local Holder

    function CreateESP()
        Holder = Instance.new("Folder", game.CoreGui)
        Holder.Name = "ESP"

        local Box = Instance.new("BoxHandleAdornment")
        Box.Name = "nilBox"
        Box.Size = Vector3.new(1, 2, 1)
        Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
        Box.Transparency = 0.7
        Box.ZIndex = 0
        Box.AlwaysOnTop = false
        Box.Visible = false

        local NameTag = Instance.new("BillboardGui")
        NameTag.Name = "nilNameTag"
        NameTag.Enabled = false
        NameTag.Size = UDim2.new(0, 200, 0, 50)
        NameTag.AlwaysOnTop = true
        NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
        local Tag = Instance.new("TextLabel", NameTag)
        Tag.Name = "Tag"
        Tag.BackgroundTransparency = 1
        Tag.Position = UDim2.new(0, -50, 0, 0)
        Tag.Size = UDim2.new(0, 300, 0, 20)
        Tag.TextSize = 15
        Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
        Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
        Tag.TextStrokeTransparency = 0.4
        Tag.Text = "nil"
        Tag.Font = Enum.Font.SourceSansBold
        Tag.TextScaled = false

        function LoadCharacter(v)
            if game.Players.LocalPlayer.Name == v.Name then
                return
            end
            
            repeat wait() until v.Character ~= nil
            v.Character:WaitForChild("Humanoid")
            local vHolder = Holder:FindFirstChild(v.Name)
            vHolder:ClearAllChildren()
            local b = Box:Clone()
            b.Name = v.Name .. "Box"
            b.Adornee = v.Character
            b.Parent = vHolder
            local t = NameTag:Clone()
            t.Name = v.Name .. "NameTag"
            t.Enabled = true
            t.Parent = vHolder
            t.Adornee = v.Character:WaitForChild("Head", 5)
            if not t.Adornee then
                return UnloadCharacter(v)
            end
            
            if v.DisplayName == v.Name then
                t.Tag.Text = v.Name
            else
                t.Tag.Text = v.DisplayName .. "\n" .. v.Name
            end
            
            local knife = (v.Backpack:FindFirstChild("Knife") or v.Character:FindFirstChild("Knife"))
            local gun = (v.Backpack:FindFirstChild("Gun") or v.Character:FindFirstChild("Gun"))
            
            if knife then
                b.Color3 = Color3.fromRGB(215, 0, 0)
                t.Tag.TextColor3 = Color3.fromRGB(215, 0, 0)
            elseif gun then
                b.Color3 = Color3.fromRGB(0, 0, 225)
                t.Tag.TextColor3 = Color3.fromRGB(0, 0, 225)
            else
                b.Color3 = Color3.fromRGB(0, 215, 0)
                t.Tag.TextColor3 = Color3.fromRGB(0, 215, 0)
            end
            
            local Update
            function UpdateNameTag()
                if not pcall(function()
                    v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                    local maxh = math.floor(v.Character.Humanoid.MaxHealth)
                    local h = math.floor(v.Character.Humanoid.Health)
                end) then
                    Update:Disconnect()
                end
            end
            UpdateNameTag()
            Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
        end

        function UnloadCharacter(v)
            local vHolder = Holder:FindFirstChild(v.Name)
            if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                vHolder:ClearAllChildren()
            end
        end

        function LoadPlayer(v)
            local vHolder = Instance.new("Folder", Holder)
            vHolder.Name = v.Name
            v.CharacterAdded:Connect(function()
                pcall(LoadCharacter, v)
            end)
            v.CharacterRemoving:Connect(function()
                pcall(UnloadCharacter, v)
            end)
            v.Changed:Connect(function(prop)
                if prop == "TeamColor" then
                    UnloadCharacter(v)
                    wait()
                    LoadCharacter(v)
                end
            end)
            LoadCharacter(v)
        end

        function UnloadPlayer(v)
            UnloadCharacter(v)
            local vHolder = Holder:FindFirstChild(v.Name)
            if vHolder then
                vHolder:Destroy()
            end
        end
        
        function UpdateColors()
            for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                if Holder then
                local knife = (player.Backpack:FindFirstChild("Knife") or player.Character:FindFirstChild("Knife"))
                local gun = (player.Backpack:FindFirstChild("Gun") or player.Character:FindFirstChild("Gun"))
                
                    for _, child in ipairs(game.CoreGui.ESP:GetDescendants()) do
                        if child:IsA("BillboardGui") and child.Name == player.Name .. "NameTag" then
                            local Tag = child:FindFirstChild("Tag")
                            if Tag then
                                
                                if player.Name == S and not IsDeath(player) then
                                    Tag.TextColor3 = Color3.fromRGB(0, 0, 225)
                                elseif player.Name == M or knife and not IsDeath(player) then
                                    Tag.TextColor3 = Color3.fromRGB(215, 0, 0)
                                elseif player.Name == H and not IsDeath(player) and IsDeath(game.Players[S]) then
                                    Tag.TextColor3 = Color3.fromRGB(255, 226, 10)
                                elseif IsDeath(player) then
                                    Tag.TextColor3 = Color3.fromRGB(30, 258, 140)
                                else
                                    Tag.TextColor3 = Color3.fromRGB(0, 215, 0)
                                end
                            end
                        end
                    end
                end
            end
        end

        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            spawn(function()
                pcall(LoadPlayer, v)
            end)
        end

        game:GetService("Players").PlayerAdded:Connect(function(v)
            pcall(LoadPlayer, v)
        end)

        game:GetService("Players").PlayerRemoving:Connect(function(v)
            pcall(UnloadPlayer, v)
        end)
    end

    function EnableESP()
        if ESPEnabled then
            return
        end

        ESPEnabled = true
        CreateESP()
    end

    function DisableESP()
        if not ESPEnabled then
            return
        end

        ESPEnabled = false
        if Holder then
            Holder:ClearAllChildren()
            Holder:Destroy()
        end
    end
    
    updated = false
    task.spawn(function()
        while true do
            if ESPEnabled then
                pcall(UpdateColors)
            end
            
            task.wait(.75)
        end
    end)
end)()

--// end //

MinimizeButton({
  Image = "",
  Size = {40, 40},
  Color = Color3.fromRGB(10, 10, 10),
  Corner = true,
  Stroke = true,
  StrokeColor = Color3.fromRGB(255, 0, 0)
})
--<>---<>---<>---<>---<>--
local Main = MakeTab({Name = "Main"})
--<>---<>---<>---<>---<>--
local section = AddSection(Main, {"Kill"})
--<>---<>---<>---<>---<>--
_G.spam = false
local Part = Instance.new("Part", workspace)
Part.Name = "Running Part"
Part.Position = Vector3.new(0, 1000, 0)
Part.Anchored = true
Part.CanCollide = true
Part.Size = Vector3.new(5, 1, 5)

local Plr = game:GetService("Players").LocalPlayer

local vim = game:GetService("VirtualInputManager")

function GetMurderer()
 for i, v in game:GetService("Players"):GetChildren() do
  if v.Backpack:FindFirstChild("Knife") or v.Character and v.Character:FindFirstChild("Knife") then return v.Character end
 end
 return nil
end

tpwalking = false

AddToggle(Main, {
    Name = "Escape muder",
    Callback = function(s)
        tpwalking = s
    end
})

exec = true
coroutine.wrap(function()
    while true do
        local Players = game:GetService("Players")
        local speaker = Players.LocalPlayer
        
        if tpwalking == true then
        	local chr = speaker.Character
        	local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
        	while tpwalking and chr and hum and hum.Parent do
        	    if exec then
            		local delta = hb:Wait()
            		if hum.MoveDirection.Magnitude > 0 then
            			if CheckDistanceMurder(10) then
            				chr:TranslateBy(hum.MoveDirection * tonumber(0.6) * delta * 10)
            			else
            				exec = false
            			end
            		end
        		elseif CheckDistanceMurder(10) then
        		    exec = true
        		end
        	end
    	end
        
        task.wait()
    end
end)()


AddButton(Main, {
  Name = "Kill all",
  Callback = function()
    for i, v in game:GetService("Players"):GetChildren() do
  if Plr.Backpack:FindFirstChild("Knife") then Plr.Backpack.Knife.Parent = Plr.Character end
   Plr.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
   vim:SendMouseButtonEvent(0,0,0,true,game,false,0)
   task.wait()
   vim:SendMouseButtonEvent(0,0,0,false,game,false,0)
   task.wait(.75)
  end
  end
})




AddButton(Main, {
  Name = "Teleport to lobby",
  Callback = function()
    Plr.Character.HumanoidRootPart.CFrame = workspace.Lobby.Spawns.Spawn.CFrame
  end
})




AddButton(Main, {
    Name = "Grab gun",
    Callback = function()
        local Players = game:GetService("Players")
        local speaker = Players.LocalPlayer
        local PSd = savePos()
        
        coroutine.wrap(function()
            while true do
                if PSd == savePos() then
                    speaker.Character.HumanoidRootPart.CFrame = workspace.GunDrop.CFrame
                elseif speaker.Backpack:FindFirstChild("GunDrop") then
                    TpPos(PSd)
                    break
                end
                
                task.wait()
            end
        end)()
    end
})


local section = AddSection(Main, {"Fun"})

AddToggle(Main, {
  Name = "Auto escape murderer",
  Callback = function(state)
AE = state
 end
})



AddToggle(Main, {
  Name = "Auto shoot murderer",
  Callback = function(state)
AH = state
 end
})

AddToggle(Main, {
  Name = "Auto shoot gun",
  Callback = function(state)
ASM = state
 end
})


AddToggle(Main, {
  Name = "Auto take gun",
  Callback = function(state)
ATG = state
 end
})



workspace.ChildAdded:Connect(function(child)
    task.delay(.25, function()
        if child.Name == "GunDrop" and ATG then
            local c = Plr.Character.HumanoidRootPart.CFrame
            Plr.Character.HumanoidRootPart.CFrame = child.CFrame
            Plr.Character.HumanoidRootPart.CFrame = c
        end
    end)
end)

function MurdererLoop()
 if ASM and Plr.Character and GetMurderer() and Plr.Character:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Gun") then
  if Plr.Backpack:FindFirstChild("Gun") then Plr.Backpack.Gun.Parent = Plr.Character end
  local Murd = GetMurderer()
  Plr.Character.HumanoidRootPart.CFrame = Murd.HumanoidRootPart.CFrame + Vector3.new(11, 0, 0)
  Plr.Character.Gun.KnifeServer.ShootGun:InvokeServer(1, Murd.HumanoidRootPart.Position, "AH")
 end
 task.wait(.5)
end
function SecondLoop()
 if GetMurderer() == Plr.Character or GetMurderer() == nil or not AE then return end
 if (GetMurderer().HumanoidRootPart.Position-Plr.Character.HumanoidRootPart.Position).magnitude < 11 then
  Plr.Character.HumanoidRootPart.CFrame = Part.CFrame + Vector3.new(0, 3, 0)
 end
end



getgenv().God = false
AddToggle(Main, {
  Name = "God mode",
  Callback = function(value)
getgenv().God = value
if getgenv().God == true then
while getgenv().God == true do
wait()
game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 100
end
end
 end
})

getgenv().Autofarm = false
AddToggle(Main, {
  Name = "Auto afk",
  Callback = function(value)
getgenv().Autofarm = value
 
if getgenv().Autofarm == true then
while getgenv().Autofarm == true do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 14, 0)
end
end
 end
})



local Main = MakeTab({Name = "Visual"})

local section = AddSection(Main, {"Player"})



AddToggle(Main, {
  Name = "No clip",
  Callback = function(s)
getgenv().Noclip = s
    game:GetService("RunService").Heartbeat:Connect(function()
        if Noclip == true then
            game:GetService("RunService").Stepped:wait()
            game.Players.LocalPlayer.Character.Head.CanCollide = false
            game.Players.LocalPlayer.Character.Torso.CanCollide = false
        end
    end)
 end
})

 InfiniteJumpEnabled = false
AddToggle(Main, {
  Name = "Infinite jump",
  Callback = function(s)
getgenv().InfiniteJump = s
game:GetService("UserInputService").JumpRequest:connect(function()

	if InfiniteJumpEnabled then		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
 end
})

AddToggle(Main, {
    Name = "spam jump",
    Callback = function(s)
        _G.spam = s
    end
})

coroutine.wrap(function()
    while true do
        if _G.spam == true then
            speaker.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end
        
        task.wait(.544)
    end
end)()

local section = AddSection(Main, {"Aim"})



AddToggle(Main, {
  Name = "Aim gun",
  Callback = function(s)
local Players = game.Players
local LocalPlayer = Players.LocalPlayer
local GetPlayers = Players.GetPlayers
local Camera = workspace.CurrentCamera
local WTSP = Camera.WorldToScreenPoint
local FindFirstChild = game.FindFirstChild
local Vector2_new = Vector2.new
local Mouse = LocalPlayer.GetMouse(LocalPlayer)
function ClosestChar()
    local Max, Close = math.huge
    for I,V in pairs(GetPlayers(Players)) do
        if V ~= LocalPlayer and V.Team ~= LocalPlayer.Team and V.Character then
            local Head = FindFirstChild(V.Character, "LowerTorso")
            if Head then
                local Pos, OnScreen = WTSP(Camera, Head.Position)
                if OnScreen then
                    local Dist = (Vector2_new(Pos.X, Pos.Y) - Vector2_new(Mouse.X, Mouse.Y)).Magnitude
                    if Dist < Max then
                        Max = Dist
                        Close = V.Character
                    end
                end
            end
        end
    end
    return Close
end

local MT = getrawmetatable(game)
local __namecall = MT.__namecall
setreadonly(MT, false)
MT.__namecall = newcclosure(function(self, ...)
    local Method = getnamecallmethod()
    if Method == "FindPartOnRay" and not checkcaller() and tostring(getfenv(0).script) == "GunInterface" then
        local Character = ClosestChar()
        if Character then
            return Character.Head, Character.Head.Position
        end
    end

    return __namecall(self, ...)
end)
setreadonly(MT, true)
 end
})



AddToggle(Main, {
  Name = "Aim knife",
  Callback = function(s)
local Players = game.Players
local LocalPlayer = Players.LocalPlayer
local GetPlayers = Players.GetPlayers
local Camera = workspace.CurrentCamera
local WTSP = Camera.WorldToScreenPoint
local FindFirstChild = game.FindFirstChild
local Vector2_new = Vector2.new
local Mouse = LocalPlayer.GetMouse(LocalPlayer)
function ClosestChar()
    local Max, Close = math.huge
    for I,V in pairs(GetPlayers(Players)) do
        if V ~= LocalPlayer and V.Team ~= LocalPlayer.Team and V.Character then
            local Head = FindFirstChild(V.Character, "Head")
            if Head then
                local Pos, OnScreen = WTSP(Camera, Head.Position)
                if OnScreen then
                    local Dist = (Vector2_new(Pos.X, Pos.Y) - Vector2_new(Mouse.X, Mouse.Y)).Magnitude
                    if Dist < Max then
                        Max = Dist
                        Close = V.Character
                    end
                end
            end
        end
    end
    return Close
end

local MT = getrawmetatable(game)
local __namecall = MT.__namecall
setreadonly(MT, false)
MT.__namecall = newcclosure(function(self, ...)
    local Method = getnamecallmethod()
    if Method == "FindPartOnRay" and not checkcaller() and tostring(getfenv(0).script) == "GunInterface" then
        local Character = ClosestChar()
        if Character then
            return Character.Head, Character.Head.Position
        end
    end

    return __namecall(self, ...)
end)
setreadonly(MT, true)
 end
})


AddButton(Main, {
    Name = "Hitbox",
    Callback = function()
        function getPlayersName()
            for _, v in pairs(game:GetChildren()) do
                if v.ClassName == "Players" then
                    return v.Name
                end
            end
        end
        
        local players = getPlayersName()
        local plr = game[players].LocalPlayer
        
        coroutine.resume(coroutine.create(function()
            while wait(1) do
                coroutine.resume(coroutine.create(function()
                    for _, v in pairs(game[players]:GetPlayers()) do
                        if v.Name ~= plr.Name and v.Character then
                            local lowerTorso = v.Character:FindFirstChild("LowerTorso")
                            local torso = v.Character:FindFirstChild("Torso")
        
                            if lowerTorso then
                                lowerTorso.Transparency = 0.85
                                lowerTorso.CanCollide = false
                                lowerTorso.Material = "Neon"
                                lowerTorso.Size = Vector3.new(5.5, 4.6, 5.5)
                            elseif torso then
                                torso.Transparency = 0.85
                                torso.CanCollide = false
                                torso.Material = "Neon"
                                torso.Size = Vector3.new(5.5, 4.6, 5.5)
                            end
                        end
                    end
                end))
            end
        end))
    end
})

AddButton(Main, {
  Name = "Rainbow gun",
  Callback = function(s)
local c = 1 function zigzag(X)  return math.acos(math.cos(X * math.pi)) / math.pi end game:GetService("RunService").RenderStepped:Connect(function()  if game.Workspace.Camera:FindFirstChild('Arms') then   for i,v in pairs(game.Workspace.Camera.Arms:GetDescendants()) do    if v.ClassName == 'MeshPart' then      v.Color = Color3.fromHSV(zigzag(c),1,1)     c = c + .0001    end   end  end end)
net = true 
notify = true
 end
})

AddButton(Main, {
    Name = "Anti-Lag",
    Callback = function()
        coroutine.wrap(function()
            local executed = false
        
            if executed then
                return
            end
        
            executed = true
        
            local lighting = game:GetService("Lighting")
            local player = game.Players.LocalPlayer
        
            local function Time(hour)
                pcall(function()
                    lighting.TimeOfDay = hour
                end)
            end
        
            coroutine.wrap(function()
                while true do
                    Time(15)
                    task.wait()
                end
            end)()
        
            task.spawn(function()
                task.wait(0.05)
        
                local decalsyeeted = true
                local g = game
                local w = g.Workspace
                local l = g.Lighting
                local t = w.Terrain
                t.WaterWaveSize = 0
                t.WaterWaveSpeed = 0
                t.WaterReflectance = 0
                t.WaterTransparency = 0
        
                for i = 1, 50 do
                    l.GlobalShadows = false
                    l.GlobalShadows = false
                end
        
                l.FogEnd = 9e9
                l.Brightness = 0
                settings().Rendering.QualityLevel = "Level01"
        
                for i, v in pairs(g:GetDescendants()) do
                    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                        v.Material = "Plastic"
                        v.Reflectance = 0
                    elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
                        v.Transparency = 1
                    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                        v.Lifetime = NumberRange.new(0)
                    elseif v:IsA("Explosion") then
                        v.BlastPressure = 1
                        v.BlastRadius = 1
                    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                        v.Enabled = false
                    elseif v:IsA("MeshPart") then
                        v.Material = "Plastic"
                        v.Reflectance = 0
                        v.TextureID = 10385902758728957
                    end
                end
        
                for i, e in pairs(l:GetChildren()) do
                    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                        e.Enabled = false
                    end
                end
            end)
        
            task.spawn(function()
                task.spawn(function()
                    task.spawn(function()
                        task.spawn(function()
                            local player = game.Players.LocalPlayer
        
                            player.CharacterAdded:Connect(destroyCharacter)
                            destroyCharacter(player.Character)
        
                            while task.wait(0.15) do
                                if player.Character then
                                    pcall(function()
                                        destroyCharacter(player.Character)
                                    end)
                                end
                            end
                        end)
                    end)
                end)
            end)
        
            task.spawn(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/LiverMods/--script/main/Bob"))()
                _G.BoostFps = true
        
                for _, v in pairs(game:GetDescendants()) do
                    pcall(function()
                        v.Material = Enum.Material.Plastic
                        States[v.Name] = {Material = v.Material}
                    end)
                end
        
                task.wait(0.7)
                _G.autore = false
                _G.refresh = false
        
                while wait() do
                    if _G.BoostFps then
                        for i, v in pairs(game.Players:GetChildren()) do
                            if v ~= game.Players.LocalPlayer then
                                pcall(function()
                                    if v.Character.Humanoid.Health < 1 then
                                        v.Character:Destroy()
                                    end
                                end)
                            end
                        end
                    end
                end
            end)
        end)()
    end
})


local Main = MakeTab({Name = "Player"})
local ws = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
local Slider = AddSlider(Main, {
  Name = "Speed",
  MinValue = (ws + 1),
  MaxValue = 300,
  Default = 0,
  Increase = 1,
  Callback = function(value)
    getgenv().Walkspeed = value
        pcall(function()
            
        end)
  end
})


AddToggle(Main, {
  Name = "Loop speed",
  Callback = function(state)
getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
 end
})

local jp = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
local Slider = AddSlider(Main, {
  Name = "Jump",
  MinValue = jp,
  MaxValue = 300,
  Default = 0,
  Increase = 1,
  Callback = function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
  end
})

AddToggle(Main, {
  Name = "Loop jump",
  Callback = function(state)
getgenv().loopJ = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
 end
})



local Main = MakeTab({Name = "Esp"})


local section = AddSection(Main, {"Esp highlight"})



AddButton(Main, {
    Name = "Esp highlight",
    Callback = function()
        -- loadstring(game:HttpGet('https://raw.githubusercontent.com/kelve123/Ken_Murder_Mystery_esp/main/Ken%20Murder%20Mystery%202%20Esp'))()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local LP = Players.LocalPlayer
        local roles
         
        -- > Funções <--
         
        function CreateHighlight() -- faça novos destaques para novos jogadores
        	for i, v in pairs(Players:GetChildren()) do
        		if v ~= LP and v.Character and not v.Character:FindFirstChild("Highlight") then
        			Instance.new("Highlight", v.Character)           
        		end
        	end
        end
         
        function UpdateHighlights()
            for _, player in pairs(Players:GetChildren()) do
                if player ~= LP and player.Character and player.Character:FindFirstChild("Highlight") then
                    local highlight = player.Character:FindFirstChild("Highlight")
        
                    if player.Name == Sheriff and IsAlive(player) then
                        highlight.FillColor = Color3.fromRGB(0, 0, 225)
                    elseif player.Name == Murder and IsAlive(player) then
                        highlight.FillColor = Color3.fromRGB(225, 0, 0)
                    elseif player.Name == Hero and IsAlive(player) and not IsAlive(game.Players[Sheriff]) then
                        highlight.FillColor = Color3.fromRGB(255, 220, 0)
                    elseif not IsAlive(player) then
                        highlight.FillColor = Color3.fromRGB(30, 258, 140)
                    else
                        highlight.FillColor = Color3.fromRGB(0, 225, 0)
                    end
                    highlight.FillTransparency = 0.85
                    highlight.OutlineColor = highlight.FillColor
                end
            end
        end
         
        function IsAlive(Player) -- Função simples
        	for i, v in pairs(roles) do
        		if Player.Name == i then
        			if not v.Killed and not v.Dead then
        				return true
        			else
        				return false
        			end
        		end
        	end
        end
         
         
        -- > Loops < --
         
        RunService.RenderStepped:connect(function()
        	roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
        	for i, v in pairs(roles) do
        		if v.Role == "Murderer" then
        			Murder = i
        		elseif v.Role == 'Sheriff'then
        			Sheriff = i
        		elseif v.Role == 'Hero'then
        			Hero = i
        		end
        	end
        	CreateHighlight()
            UpdateHighlights()
        end)
    end
})

local section = AddSection(Main, {"Esp player"})

AddToggle(Main, {
    Name = "Notify",
    Callback = function(s)
        if s then
            gui.Enabled = true
        else
            gui.Enabled = false
        end
    end
})

local saveGer = game:GetService("Players").LocalPlayer.NameDisplayDistance

AddToggle(Main, {
    Name = "Esp name",
    Callback = function(s)
        if s then
            EnableESP()
            game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
        else
            DisableESP()
            game:GetService("Players").LocalPlayer.NameDisplayDistance = saveGer
        end
    end
})

local Main = MakeTab({Name = "Misc"})

local section = AddSection(Main, {"Chat"})


function SpamChat()
			while autochat == true do
				local ohString1 = "Tbao Hub On Top"
				local ohString2 = "All"	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(ohString1, ohString2)
				wait(1)
			end
		end

AddToggle(Main, {
  Name = "Spam chat",
  Callback = function()
autochat = Value
				SpamChat()
 end
})


local section = AddSection(Main, {"Sever"})

AddButton(Main, {
  Name = "Sever hop",
  Callback = function()
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"
local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end
local Server, Next; repeat
   local Servers = ListServers(Next)
   Server = Servers.data[1]
   Next = Servers.nextPageCursor
until Server
TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
end
})


AddButton(Main, {
  Name = "Rejoin",
  Callback = function()
local ts = game:GetService("TeleportService")
local p = game:GetService("Players").LocalPlayer
ts:Teleport(game.PlaceId, p)
end
})


local section = AddSection(Main, {"Fps"})

AddButton(Main, {
  Name = "Fps cap",
  Callback = function()
local ToDisable = {
	Textures = false,
	VisualEffects = true,
	Parts = true,
	Particles = true,
	Sky = true
}

local ToEnable = {
	FullBright = false
}

local Stuff = {}

for _, v in next, game:GetDescendants() do
	if ToDisable.Parts then
		if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then
			v.Material = Enum.Material.SmoothPlastic
			table.insert(Stuff, 1, v)
		end
	end
	
	if ToDisable.Particles then
		if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
			v.Enabled = false
			table.insert(Stuff, 1, v)
		end
	end
	
	if ToDisable.VisualEffects then
		if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
			v.Enabled = false
			table.insert(Stuff, 1, v)
		end
	end
	
	if ToDisable.Textures then
		if v:IsA("Decal") or v:IsA("Texture") then
			v.Texture = ""
			table.insert(Stuff, 1, v)
		end
	end
	
	if ToDisable.Sky then
		if v:IsA("Sky") then
			v.Parent = nil
			table.insert(Stuff, 1, v)
		end
	end
end
end
})

local Main = MakeTab({Name = "Credits"})

local section = AddSection(Main, {"by Liver zMods"})

local section = AddSection(Main, {"owner Liver zMods"})

local section = AddSection(Main, {"YTB Liver zMods"})

task.spawn(function()
    local function gplr(String)
    	local Found = {}
    	local strl = String:lower()
    	if strl == "all" then
    		for i,v in pairs(game:FindService("Players"):GetPlayers()) do
    			table.insert(Found,v)
    		end
    	elseif strl == "others" then
    		for i,v in pairs(game:FindService("Players"):GetPlayers()) do
    			if v.Name ~= lp.Name then
    				table.insert(Found,v)
    			end
    		end 
    	elseif strl == "me" then
    		for i,v in pairs(game:FindService("Players"):GetPlayers()) do
    			if v.Name == lp.Name then
    				table.insert(Found,v)
    			end
    		end 
    	else
    		for i,v in pairs(game:FindService("Players"):GetPlayers()) do
    			if v.Name:lower():sub(1, #String) == String:lower() then
    				table.insert(Found,v)
    			end
    		end 
    	end
    	return Found 
	end
end)

task.spawn(function()
-- [ Services ] --
local Services = setmetatable({}, {
    __index = function(self, serviceName)
        local service = game:GetService(serviceName)
        if service then
            self[serviceName] = service
        end
        return service
    end
})


-- [ Modules ] --
--[[
local OrnamentalMouse = loadstring(game:HttpGet("https://raw.githubusercontent.com/iHavoc101/Genesis-Studios/main/Modules/OrnamentalMouse.lua", true))().new()
OrnamentalMouse.Sensitivity = 0.9
OrnamentalMouse.AutoUpdate = false
]]

-- [ LocalPlayer ] --
LocalPlayer = Services.Players.LocalPlayer
Camera = workspace.CurrentCamera

-- [ Weapon Names ] --
WeaponNames = {
    Knife = {
        Index = "Murderer";
        Color = Color3.fromRGB(255, 0, 0)
    };
    Gun = {
        Index = "Sheriff";
        Color = Color3.fromRGB(0, 0, 255)
    };
}

local AttackAnimations = {
   "rbxassetid://2467567750";
   "rbxassetid://1957618848";
   "rbxassetid://2470501967";
   "rbxassetid://2467577524";
}

-- // Variables \\ --
-- [ Roles ] --
local Roles = {
   Murderer = nil;
   Sheriff = nil;
   Closest = nil;
}

local ESPInstances = {}
local ESPToggle = true

local SilentAIMEnabled = true

-- [ Character ] --
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
LocalPlayer.CharacterAdded:Connect(function(Character)
    Character = Character
    Humanoid = Character:WaitForChild("Humanoid")
end)

-- [ Parâmetros de Raycast ] --
local RaycastParameters = RaycastParams.new()
RaycastParameters.IgnoreWater = true
RaycastParameters.FilterType = Enum.RaycastFilterType.Blacklist
RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}

-- // Functions \\ --
-- [ Main ] --
Functions = {}

-- ESP --
function Functions.ESP(Part, Color)
   if Part:FindFirstChildOfClass('BoxHandleAdornment') then
       return Part:FindFirstChildOfClass('BoxHandleAdornment')
   end

   local Box = Instance.new("BoxHandleAdornment")
   Box.Size = Part.Size + Vector3.new(0.1, 0.1, 0.1)
   Box.Name = "Mesh"
   Box.Visible = ESPToggle
   Box.Adornee = Part
   Box.Color3 = Color
   Box.AlwaysOnTop = true
   Box.ZIndex = 5
   Box.Transparency = 0.5
   Box.Parent = Part

   table.insert(ESPInstances, Box)

   return Box
end

-- Notify Roles --
function Functions.NotifyRoles()
   if Roles.Murderer then
       -- Murderer --
       local Image, Ready = Services.Players:GetUserThumbnailAsync(Roles.Murderer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
       Services.StarterGui:SetCore("SendNotification", {
           Title = 'Murderer';
           Text = Roles.Murderer.Name;
           Icon = Image;
           Duration = 5;
       })
   end

   if Roles.Sheriff then
       -- Sheriff --
       local Image, Ready = Services.Players:GetUserThumbnailAsync(Roles.Sheriff.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
       Services.StarterGui:SetCore("SendNotification", {
           Title = 'Sheriff';
           Text = Roles.Sheriff.Name;
           Icon = Image;
           Duration = 5;
       })
   end
end

-- GetClosestPlayer --
function Functions.GetClosestPlayer(MaxDistance)
   local ClosestPlayer = nil
   local FarthestDistance = MaxDistance or math.huge

   for i, v in ipairs(Services.Players.GetPlayers(Services.Players)) do
       if v ~= LocalPlayer then
           pcall(function()
               local DistanceFromPlayer = (LocalPlayer.Character.PrimaryPart.Position - v.Character.PrimaryPart.Position).Magnitude
               if DistanceFromPlayer < FarthestDistance then
                   FarthestDistance = DistanceFromPlayer
                   ClosestPlayer = v
               end
           end)
       end
   end

   return ClosestPlayer
end

-- [ Event ] --
local EventFunctions = {}

function EventFunctions.Initialize(Player)
   local function CharacterAdded(Character)
       Player:WaitForChild("Backpack").ChildAdded:Connect(function(Child)
           local Role = WeaponNames[Child.Name]
           if Role then
               Roles[Role.Index] = Player
               local Cham = Functions.ESP(Player.Character.HumanoidRootPart, Role.Color)

               local Animator = Player.Character:FindFirstChildWhichIsA("Humanoid"):WaitForChild("Animator")
               Animator.AnimationPlayed:Connect(function(AnimationTrack)
                   if (AnimationTrack and AnimationTrack.Animation) == nil then
                       return
                   end

                   if table.find(AttackAnimations, AnimationTrack.Animation.AnimationId) then
                       Cham.Color3 = Color3.fromRGB(255, 90, 90)

                       while true do
                           Services.RunService.Heartbeat:Wait(0.01)
                           local PlayingAnimations = Animator:GetPlayingAnimationTracks()
                           local StillAttacking = false
                           for i,v in ipairs(PlayingAnimations) do
                               if table.find(AttackAnimations, v.Animation.AnimationId) then
                                   StillAttacking = true
                               end
                           end
                           if StillAttacking == false then
                               break
                           end
                       end

                       Cham.Color3 = Role.Color
                   end
               end)
           end
       end)
   end

   CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
   Player.CharacterAdded:Connect(CharacterAdded)
end

function EventFunctions.GunAdded(Child)
   if Child.Name == "GunDrop" then
       Functions.ESP(Child, Color3.fromRGB(100, 125, 205))
   end
end

function EventFunctions.ContextActionService_C(actionName, InputState, inputObject)
if InputState == Enum.UserInputState.End then
return
   end
   
   Functions.NotifyRoles()
end

function EventFunctions.ContextActionService_V(actionName, InputState, inputObject)
if InputState == Enum.UserInputState.End then
return
   end

   if Humanoid.WalkSpeed == 16.5 or Humanoid.WalkSpeed == 16 then
Humanoid.WalkSpeed = 20
else
Humanoid.WalkSpeed = 16.5
   end

   Services.StarterGui:SetCore("SendNotification", {
Title = 'Speed Change';
Text = tostring(Humanoid.WalkSpeed);
Duration = 3;
})
end

function EventFunctions.ContextActionService_B(actionName, InputState, inputObject)
if InputState == Enum.UserInputState.End then
return
   end

   ESPToggle = not ESPToggle
   for i,v in ipairs(ESPInstances) do
       v.Visible = ESPToggle
       if v.Parent == nil then
           table.remove(ESPInstances, i)
       end
   end
end

function EventFunctions.ContextActionService_G(actionName, InputState, inputObject)
   if InputState == Enum.UserInputState.End then
return
   end
   SilentAIMEnabled = not SilentAIMEnabled
   Services.StarterGui:SetCore("SendNotification", {
Title = 'Silent Aim';
Text = "Enabled: " .. tostring(SilentAIMEnabled);
Duration = 3;
})
end

-- // Metatable \\ --
local RawMetatable = getrawmetatable(game)
local OldNameCall = RawMetatable.__namecall
setreadonly(RawMetatable, false)

RawMetatable.__namecall = newcclosure(function(Object, ...)
   local NamecallMethod = getnamecallmethod()
   local Arguments = {...}

   if SilentAIMEnabled == true then
       RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}
       if NamecallMethod == "FireServer" and tostring(Object) == "Throw" then
           local Success, Error = pcall(function()
               local Closest = Functions.GetClosestPlayer()
               local PrimaryPart = Closest.Character.PrimaryPart
               local Velocity = PrimaryPart.AssemblyLinearVelocity * Vector3.new(1, 0, 1)
               local Magnitude = (PrimaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
               local Prediction = Velocity * 0.5 * Magnitude / 100
               local Result = workspace.Raycast(workspace, LocalPlayer.Character.PrimaryPart.Position, (PrimaryPart.Position - (LocalPlayer.Character.PrimaryPart.Position + Prediction)).Unit * 200, RaycastParameters)
               Arguments[2] = Result.Position
           end)
           if not Success then
               warn(Error)
           end
       elseif NamecallMethod == "InvokeServer" and tostring(Object) == "ShootGun" and Roles.Murderer then
           local Success, Error = pcall(function()
               local PrimaryPart = Roles.Murderer.Character.PrimaryPart
               local Prediction = PrimaryPart.AssemblyLinearVelocity / 40
               if math.abs(PrimaryPart.AssemblyLinearVelocity.Y) < 10 then
                   Arguments[2] = PrimaryPart.Position + Prediction
               else
                   return "Nullify Remote"
               end
           end)
           if not Success then
               warn(Error)
           elseif Success == "Nullify Remote" then
               warn("Null")
               return
           end
       end
   end

   return OldNameCall(Object, unpack(Arguments))
end)

setreadonly(RawMetatable, true)

-- // Event Listeners \\ --
for i,v in ipairs(Services.Players:GetPlayers()) do
    EventFunctions.Initialize(v)
end

Services.Players.PlayerAdded:Connect(EventFunctions.Initialize)

workspace.ChildAdded:Connect(EventFunctions.GunAdded)

-- [ Binds ] --
Services.ContextActionService:BindAction('SprintBind', EventFunctions.ContextActionService_V, false, Enum.KeyCode.V)
Services.ContextActionService:BindAction('NotifyBind', EventFunctions.ContextActionService_C, false, Enum.KeyCode.C)
Services.ContextActionService:BindAction('ESPBind', EventFunctions.ContextActionService_B, false, Enum.KeyCode.B)
Services.ContextActionService:BindAction('AIMBind', EventFunctions.ContextActionService_G, false, Enum.KeyCode.G)

-- // Actions \\ --

function tag()
    for i,v in pairs(game.Players:GetChildren()) do
    	local k = v.Backpack:FindFirstChild("Knife")
    	local kk = v.Character:FindFirstChild("Knife")
    	local g = v.Backpack:FindFirstChild("Gun")
        local gg = v.Character:FindFirstChild("Gun")
    	if k or kk then
    		local esp = CustomPlayerTag:Clone()
    		esp.Parent = v.Character.Head
    		esp.PlayerName.Text = v.Name
    		esp.PlayerName.TextColor3 = Color3.fromRGB(255, 0, 0)
    	elseif g or gg then
    		local esp = CustomPlayerTag:Clone()
    		esp.Parent = v.Character.Head
    		esp.PlayerName.Text = v.Name
    		esp.PlayerName.TextColor3 = Color3.fromRGB(0, 0, 255)
    	else
    		local esp = CustomPlayerTag:Clone()
    		esp.Parent = v.Character.Head
    		esp.PlayerName.Text = v.Name
    		esp.PlayerName.TextColor3 = Color3.fromRGB(0, 255, 0)
    	end
    end
end

end)
