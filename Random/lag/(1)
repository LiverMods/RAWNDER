--// variables //
local Services = setmetatable({}, {
    __index = function(self, serviceName)
        local service = game:GetService(serviceName)
        if service then
            self[serviceName] = service
        end
        return service
    end
})

local LocalPlayer = Services.Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HRP = Character:WaitForChild("HumanoidRootPart")
local AC = Character:FindFirstChildOfClass("AnimationController")
local startTime = tick()
local Basic = Instance.new('BindableFunction')

--// global variables //
ws = Humanoid.WalkSpeed
delay = task.wait
boolean = false
_G.boolean2 = true
_G.main = false

--// loadstring //
loadstring(game:HttpGet("https://raw.githubusercontent.com/LiverMods/xRawnder/main/Library/Cmds_Chat"))();

--// variable function //
LocalPlayer.CharacterAdded:Connect(function(Character)
    Character = Character
    Humanoid = Character:WaitForChild("Humanoid")
    HRP = Character:WaitForChild("HumanoidRootPart")
    AC = Character:FindFirstChildOfClass("AnimationController")
end)

--// notification about main script //
task.spawn(function()
    wait(2.7)
    if _G.boolean2 == true then
        _G.boolean2 = false
        _G.main = true
        
        Services.StarterGui:SetCore('SendNotification', {
            Title = boolean and "Disable" or "Enable",
            Text = boolean and "Remember that it can \n be activated later." or "Remember that it can \n be deactivated later.",
            Duration = math.huge,
            Callback = Basic,
            Button1 = "✅"
        })
        
        task.wait(.8)
        _G.boolean2 = true
    end
end)

--// function //
local function SecondPlan(breakin)
    coroutine.wrap(function()
        task.spawn(function()
            breakin()
        end)
    end)()
end

function Basic.OnInvoke(got)
    if got == '✅' then
        boolean = not boolean
    end
end

local function FPS(number)
    SecondPlan(function()
        pcall(function()
            setfflag("TaskSchedulerTargetFps", number)
        end)
    end)
end

local function Random(number, min, max)
    if number == true then
        if not (type(min) == "number" and type(max) == "number") then
            error("Parameters 'min' and 'max' must be numbers.")
        end

        if min > max then
            error("Parameter 'min' must be less than or equal to 'max'.")
        end

        local randomNumber = math.random(min, max)
        return randomNumber
    elseif number == false then
        if not (type(min) == "number" and type(max) == "number") then
            error("Parameters 'min' and 'max' must be numbers.")
        end

        local maxCharacters = math.random(min, max)
        local randomNumber = ""
        for i = 1, maxCharacters do
            randomNumber = randomNumber .. string.char(math.random(97, 122))
        end
        return randomNumber
    end
end

--// credits //
SecondPlan(function()
    Services.StarterGui:SetCore("SendNotification", {
        Title = "By Liver zMods";
        Text = "created by Brazilian!";
        Icon = "rbxthumb://type=Asset&id=11935866652&w=150&h=150";
        Duration = Random(true, 30, 45)
    })
end)

--// Main script //
SecondPlan(function()
    while delay(0.3) do
        if boolean then
            
            local number = Random(true, -3, 1)
            
            SecondPlan(function()
                delay = task.wait
                local a = game:GetService("Players").LocalPlayer.Character or game:GetService("Players").LocalPlayer.CharacterAdded:wait()
                
                while delay() do
                    local b = a:FindFirstChildOfClass("Humanoid") or a:FindFirstChildOfClass("AnimationController")
                    if not b or not a then continue end
                    for c, d in next, b:GetPlayingAnimationTracks() do
                        if boolean then
                            d:AdjustSpeed(number)
                        else
                            d:AdjustSpeed(1)
                        end
                    end
                end
            end)
            
            SecondPlan(function()
                local saved = Character:GetPrimaryPartCFrame()
        
                local currentTime = tick()
                local elapsedTime = currentTime - startTime
        
                if elapsedTime >= 6 then
                    startTime = tick()
                    Character:SetPrimaryPartCFrame(saved)
                end
            end)
    
            SecondPlan(function()
                 if number == (0) and Humanoid.MoveDirection.Magnitude > 0 then
                    local Player = HRP
                    Player.CFrame = (Player.CFrame + Player.CFrame.LookVector * 2)
                    Humanoid.WalkSpeed = (ws - 10)
        
                    FPS(Random(true, 6, 19))
                elseif number == (-1) or number == (1) and Humanoid.MoveDirection.Magnitude > 0 then
                    Humanoid.WalkSpeed = (ws)
                    Humanoid.WalkSpeed = (ws + 7)
                    
                    FPS(Random(true, 22, 29))
                    
                    local Player = HRP
                    Player.CFrame = (Player.CFrame + Player.CFrame.LookVector * -1.2)
                else
                    Humanoid.WalkSpeed = (ws - 5)
                    FPS(Random(true, 30, 40))
                end
            end)
        else
            Humanoid.WalkSpeed = (ws)
            FPS(120)
        end
    end
end)

SecondPlan(function()
    chat_Message("————Commands [BETA]————", xrawnder, Enum.Font.SciFi)
    chat_Message("• toggle", xrawnder, Enum.Font.SciFi)
    chat_Message("—————————END—————————")
    chat_Message("——————prefix [BETA]——————", xrawnder, Enum.Font.SciFi)
    chat_Message("----------------{ # }----------------", xrawnder, Enum.Font.SciFi)
    chat_Message("----------------{ ! }----------------", xrawnder, Enum.Font.SciFi)
    chat_Message("----------------{ / }----------------", xrawnder, Enum.Font.SciFi)
    chat_Message("—————————END—————————", xrawnder, Enum.Font.SciFi)
    chat_Message("• Credits: Liver zMods", xrawnder, Enum.Font.SciFi)
    chat_Message("————————————————————", xrawnder, Enum.Font.SciFi)
    
    Add_cmds_Chat("toggle", function()
        if _G.main == true then
            if _G.boolean2 == true then
                _G.boolean2 = false
                
                Services.StarterGui:SetCore('SendNotification', {
                    Title = boolean and "Disable" or "Enable",
                    Text = boolean and "Remember that it can \n be activated later." or "Remember that it can \n be deactivated later.",
                    Duration = math.huge,
                    Callback = Basic,
                    Button1 = "✅"
                })
                
                chat_Message(boolean and "OFF" or "ON", xrawnder, Enum.Font.SciFi)
                task.wait(.8)
                _G.boolean2 = true
            end
        end
    end)
end)
